import 'dart:io';

/// Script master para configurar √≠cones iOS com cores espec√≠ficas por flavor
/// Implementa o mesmo comportamento do Android para iOS
void main() async {
  print('üöÄ Configurando √≠cones iOS com cores por flavor...\n');
  print('=' * 60);

  final steps = <String, Future<ProcessResult> Function()>{
    '1. Criando √≠cones iOS com cores espec√≠ficas': () =>
        _runDart('scripts/create_ios_flavored_icons_direct.dart'),
    '2. Verificando sistema de c√≥pia autom√°tica': () => _checkCopyScript(),
    '3. Atualizando configura√ß√µes do Xcode (opcional)': () =>
        _runPython('scripts/update_ios_appicons.py'),
  };

  var successCount = 0;
  var failCount = 0;

  for (final entry in steps.entries) {
    final stepName = entry.key;
    final stepFunction = entry.value;

    print('\n' + '=' * 60);
    print('üìã $stepName');
    print('=' * 60);

    try {
      final result = await stepFunction();

      if (result.exitCode == 0) {
        print('\n‚úÖ Passo conclu√≠do com sucesso!');
        successCount++;
      } else {
        print('\n‚ö†Ô∏è  Passo conclu√≠do com avisos:');
        if (result.stderr.toString().isNotEmpty) {
          print(result.stderr);
        }
        failCount++;
      }
    } catch (e) {
      print('\n‚ùå Erro no passo: $e');
      failCount++;
    }
  }

  print('\n' + '=' * 60);
  print('üìä RESUMO');
  print('=' * 60);
  print('‚úÖ Passos bem-sucedidos: $successCount/${steps.length}');
  print('‚ö†Ô∏è  Passos com erros: $failCount/${steps.length}');

  if (failCount == 0) {
    print('\nüéâ Configura√ß√£o iOS conclu√≠da com sucesso!');
    print('\nüì± Agora o iOS tem o mesmo comportamento do Android:');
    print('   ‚Ä¢ √çcones com fundo colorido baseado na cor prim√°ria da cidade');
    print('   ‚Ä¢ Cada flavor tem sua cor espec√≠fica vis√≠vel no √≠cone');
    print('   ‚Ä¢ Sistema de c√≥pia autom√°tica configurado');
    print('\nüé® Cores configuradas:');
    print('   ‚Ä¢ Main: #5A7B97 (azul padr√£o)');
    print('   ‚Ä¢ OuroPreto: #A5732E (dourado)');
    print('   ‚Ä¢ Vicosa: #b61817 (vermelho)');
    print('\nüöÄ Para testar:');
    print('   flutter run --flavor main -d ios');
    print('   flutter run --flavor ouroPreto -d ios');
    print('   flutter run --flavor vicosa -d ios');
    print('\nüìù Nota: O √≠cone ser√° automaticamente trocado baseado no flavor!');
  } else {
    print('\n‚ö†Ô∏è  Alguns passos falharam. Revise os erros acima.');
    print('   Voc√™ pode executar os scripts individuais manualmente.');
  }

  print('\n' + '=' * 60);
}

Future<ProcessResult> _runDart(String scriptPath) async {
  return await Process.run('dart', [scriptPath]);
}

Future<ProcessResult> _runPython(String scriptPath) async {
  return await Process.run('python3', [scriptPath]);
}

Future<ProcessResult> _checkCopyScript() async {
  final scriptFile = File('ios/Scripts/copy_appicon.sh');
  if (scriptFile.existsSync()) {
    print('‚úÖ Script de c√≥pia autom√°tica encontrado: ${scriptFile.path}');
    return ProcessResult(0, 0, 'Script encontrado', '');
  } else {
    print('‚ö†Ô∏è  Script de c√≥pia n√£o encontrado. Sistema manual ser√° usado.');
    return ProcessResult(1, 1, '', 'Script n√£o encontrado');
  }
}


